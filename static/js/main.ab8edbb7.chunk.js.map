{"version":3,"sources":["components/thumb.js","components/editor.js","components/photoCanvas.js","App.js","index.js"],"names":["Thumb","data","setSelectedPhoto","isSelected","thumbHeight","height","width","onClick","className","style","backgroundImage","urls","thumb","Editor","canvasRef","useRef","useState","title","setTitle","subtitle","setSubtitle","imgRawWidth","imgRawHeight","imgHeight","canvasHeight","imgOffsetY","useEffect","src","t","st","toUpperCase","split","join","ctx","current","getContext","clearRect","img","Image","setAttribute","onload","drawImage","strokeStyle","lineWidth","strokeRect","fillStyle","textAlign","font","fillText","canvasWidth","draw","full","options","name","type","quality","onChange","e","target","value","placeholder","id","ref","canvasToImage","PhotoCanvas","query","setQuery","thumbs","setThumbs","selected","setSelected","fetch","method","headers","then","res","json","results","slice","length","map","i","key","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab8edbb7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Thumb = ({ data, setSelectedPhoto, isSelected }) => {\n  const aspectRatio = data.height/data.width\n  const thumbWidth = 100\n  const thumbHeight = thumbWidth * aspectRatio\n\n  const handleClick = () => {\n    setSelectedPhoto(data)\n  }\n  return (\n    <button\n      onClick={handleClick}\n      className={`thumb ${isSelected? 'selected' : null}`}\n      style={{backgroundImage: `url(${data.urls.thumb})`, width: thumbWidth, height: thumbHeight}}>\n    </button>\n  );\n}\n\nexport default Thumb;\n","import React, { useState, useEffect, useRef } from 'react'\n\nimport canvasToImage from 'canvas-to-image'\n\nconst Editor = ({ data }) => {\n  const canvasRef = useRef()\n  const [title, setTitle] = useState('')\n  const [subtitle, setSubtitle] = useState('')\n\n  const imgRawWidth = data.width\n  const imgRawHeight = data.height\n\n  const aspectRatio = imgRawHeight/imgRawWidth\n\n  const imgWidth = 600\n  const imgHeight = imgWidth * aspectRatio\n\n  const canvasWidth = 900\n  const canvasHeight = imgHeight + 230\n\n  const imgOffsetX = (canvasWidth-imgWidth)/2\n  const imgOffsetY = (canvasHeight-imgHeight)/4\n\n\n  const draw = (src, t, st) =>{\n    t = t.toUpperCase().split('').join(' ')\n    var ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasWidth, canvasHeight);\n    var img = new Image();\n    img.setAttribute('crossorigin', 'anonymous');\n    img.onload = function(){\n      ctx.drawImage(img,imgOffsetX,imgOffsetY,imgWidth, imgHeight);\n      };\n    img.src = src;\n\n    ctx.strokeStyle = '#FFF';\n    ctx.lineWidth = 5;\n    ctx.strokeRect(imgOffsetX,imgOffsetY,imgWidth,imgHeight);\n\n    ctx.fillStyle = '#FFF';\n    ctx.textAlign = \"center\";\n    ctx.font = \"60px bold arial\";\n    ctx.fillText(t, canvasWidth/2, canvasHeight-100);\n    ctx.font = \"24px regular arial\";\n    ctx.fillText(st, canvasWidth/2, canvasHeight-50);\n  }\n\n  useEffect(()=> {\n    if(data) {\n      draw(data.urls.full, title, subtitle)\n    }\n  },[data, title, subtitle])\n\n  if (!data) return null\n\n  const options = {\n    name: 'very_inspirational_poster', // default image\n    type: 'jpg',         // default png, accepted values jpg or png\n    quality: 0.9,         // default 1, can select any value from 0 to 1 range\n  }\n\n  const handleExport = () => {\n    canvasToImage(canvasRef.current, options);\n  }\n\n  const handleTitle = (e) => {\n    setTitle(e.target.value)\n  }\n  const handleSubtitle = (e) => {\n    setSubtitle(e.target.value)\n  }\n\n  return (\n    <div className=\"editor\">\n      <h3>Add motivational text</h3>\n      <div className=\"edit-controls\">\n        <div className=\"edit-inputs\">\n          <input type=\"text\" onChange={handleTitle} value={title} placeholder=\"TITLE\" />\n          <input type=\"text\" onChange={handleSubtitle} value={subtitle} placeholder=\"Subtitle\"/>\n        </div>\n      </div>\n      <canvas\n        id=\"canvas\"\n        ref={canvasRef}\n        width={canvasWidth}\n        height={canvasHeight}\n        style={{width: '100%', height: '100%'}}\n      >\n      </canvas>\n      <br/>\n      <br/>\n      <button onClick={handleExport}>Export .jpg</button>\n    </div>\n  );\n}\n\nexport default Editor;\n","import React, { useState } from 'react';\n\nimport Thumb from './thumb'\nimport Editor from './editor'\n\nconst ENDPOINT = 'https://api.unsplash.com/search/photos?page=1&query='\nconst nothingToSeeHere = 'Client-ID Cccme_EruAfcmSox6ljTI3SdiYavskzRJnEqfO8splI'\n\nconst PhotoCanvas = () => {\n  const [query, setQuery] = useState('')\n  const [thumbs, setThumbs] = useState([])\n  const [selected, setSelected] = useState('')\n\n  const handleChange = (e) => {\n    setQuery(e.target.value)\n  }\n\n  const getPhotos = () => {\n    fetch(ENDPOINT + query, {\n      method: 'GET',\n      headers: {\n        'Authorization': nothingToSeeHere,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      setThumbs(data.results.slice(0,5))\n    })\n  }\n\n  const setSelectedPhoto = (data) => {\n    setSelected(data)\n  }\n\n  return (\n    <div className=\"photo-canvas\">\n      <div className=\"search-box\">\n        <input type=\"text\" name=\"search\" onChange={handleChange} value={query} placeholder=\"Enter keyword\"/>\n        <button onClick={getPhotos}>Find images</button>\n      </div>\n\n      {thumbs.length === 0 ?\n        <p>Try a search...</p> :\n        <h3>Pick a thumbnail</h3>\n      }\n      <div className=\"thumbs\">\n        {thumbs.map((t,i) => (\n          <Thumb\n            key={i}\n            data={t}\n            setSelectedPhoto={setSelectedPhoto}\n            isSelected={selected.id === t.id ? true : null}\n          />\n        ))}\n      </div>\n\n      <Editor data={selected} />\n\n    </div>\n  );\n}\n\n\nexport default PhotoCanvas;\n","import React from 'react';\nimport './styles/index.scss';\n\nimport PhotoCanvas from './components/photoCanvas'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>Inspire Me</h1>\n        <PhotoCanvas />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}