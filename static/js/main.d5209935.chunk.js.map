{"version":3,"sources":["components/thumb.js","components/editor.js","components/photoCanvas.js","App.js","index.js"],"names":["Thumb","data","setSelectedPhoto","isSelected","thumbHeight","height","width","onClick","className","style","backgroundImage","urls","thumb","Editor","canvasRef","useRef","aspectRatio","canvasHeight","imgHeight","imgOffsetY","useEffect","ctx","current","getContext","img","Image","onload","drawImage","src","full","strokeStyle","strokeRect","fillStyle","textAlign","fillText","canvasWidth","draw","ref","PhotoCanvas","useState","query","setQuery","thumbs","setThumbs","selected","setSelected","htmlFor","type","name","onChange","e","target","value","placeholder","fetch","method","headers","then","res","json","results","slice","map","t","i","key","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAmBeA,EAjBD,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,WAGjCC,EADa,KADCH,EAAKI,OAAOJ,EAAKK,OAOrC,OACE,4BACEC,QALgB,WAClBL,EAAiBD,IAKfO,UAAS,gBAAWL,EAAY,WAAa,MAC7CM,MAAO,CAACC,gBAAgB,OAAD,OAAST,EAAKU,KAAKC,MAAnB,KAA6BN,MAVrC,IAUwDD,OAAQD,MCuCtES,EAnDA,SAAC,GAAc,IAAZZ,EAAW,EAAXA,KACVa,EAAYC,mBAEZC,EAAcf,EAAKI,OAAOJ,EAAKK,MAG/BW,EADc,IACeD,EAG7BE,EADW,IACYF,EAGvBG,GAAcF,EAAaC,GAAW,EAyB5C,OANAE,qBAAU,WACLnB,GAjBQ,WACX,IAAIoB,EAAMP,EAAUQ,QAAQC,WAAW,MACnCC,EAAM,IAAIC,MACdD,EAAIE,OAAS,WACXL,EAAIM,UAAUH,EARC,GAQcL,EAXhB,IAWqCD,IAEpDM,EAAII,IAAM3B,EAAKU,KAAKkB,KAEpBR,EAAIS,YAAc,OAClBT,EAAIU,WAba,GAaSZ,EAhBX,IAgBgCD,GAE/CG,EAAIW,UAAY,OAChBX,EAAIY,UAAY,SAChBZ,EAAIa,SAAS,eAAgBC,IAAelB,EAAa,IAKvDmB,KAEF,CAACnC,IAEEA,EAEH,yBAAKO,UAAU,UACb,4BACE6B,IAAKvB,EACLR,MArCc,IAsCdD,OAAQY,EACRR,MAAO,CAACH,MAAO,OAAQD,OAAQ,WAPnB,MCmBLiC,EAlDK,WAAO,IAAD,EACEC,mBAAS,IADX,mBACjBC,EADiB,KACVC,EADU,OAEIF,mBAAS,IAFb,mBAEjBG,EAFiB,KAETC,EAFS,OAGQJ,mBAAS,IAHjB,mBAGjBK,EAHiB,KAGPC,EAHO,KAsBlB3C,EAAmB,SAACD,GACxB4C,EAAY5C,IAGd,OACE,yBAAKO,UAAU,gBACb,2BAAOsC,QAAQ,UAAf,UACA,2BAAOC,KAAK,OAAOC,KAAK,SAASC,SAxBhB,SAACC,GACpBT,EAASS,EAAEC,OAAOC,QAuByCA,MAAOZ,EAAOa,YAAY,kBACnF,4BAAQ9C,QArBM,WAChB+C,MAba,uDAaId,EAAO,CACtBe,OAAQ,MACRC,QAAS,CACP,cAfiB,2DAkBpBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAxD,GACJ0C,EAAU1C,EAAK2D,QAAQC,MAAM,EAAE,SAY/B,UAEA,yBAAKrD,UAAU,UACZkC,EAAOoB,KAAI,SAACC,EAAEC,GAAH,OACV,kBAAC,EAAD,CACEC,IAAKD,EACL/D,KAAM8D,EACN7D,iBAAkBA,EAClBC,WAAYyC,EAASsB,KAAOH,EAAEG,IAAY,WAKhD,kBAAC,EAAD,CAAQjE,KAAM2C,MCpCLuB,MAVf,WACE,OACE,yBAAK3D,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,SCLR4D,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d5209935.chunk.js","sourcesContent":["import React from 'react';\n\nconst Thumb = ({ data, setSelectedPhoto, isSelected }) => {\n  const aspectRatio = data.height/data.width\n  const thumbWidth = 100\n  const thumbHeight = thumbWidth * aspectRatio\n\n  const handleClick = () => {\n    setSelectedPhoto(data)\n  }\n  return (\n    <button\n      onClick={handleClick}\n      className={`thumb ${isSelected? 'selected' : null}`}\n      style={{backgroundImage: `url(${data.urls.thumb})`, width: thumbWidth, height: thumbHeight}}>\n    </button>\n  );\n}\n\nexport default Thumb;\n","import React, { useEffect, useRef } from 'react';\n\nconst Editor = ({ data }) => {\n  const canvasRef = useRef()\n\n  const aspectRatio = data.height/data.width\n\n  const canvasWidth = 300;\n  const canvasHeight = canvasWidth * aspectRatio\n\n  const imgWidth = 200\n  const imgHeight = imgWidth * aspectRatio\n\n  const imgOffsetX = (canvasWidth-imgWidth)/2\n  const imgOffsetY = (canvasHeight-imgHeight)/4\n\n\n  const draw = () =>{\n    var ctx = canvasRef.current.getContext('2d');\n    var img = new Image();\n    img.onload = function(){\n      ctx.drawImage(img,imgOffsetX,imgOffsetY,imgWidth, imgHeight);\n      };\n    img.src = data.urls.full;\n\n    ctx.strokeStyle = '#FFF';\n    ctx.strokeRect(imgOffsetX,imgOffsetY,imgWidth, imgHeight);\n\n    ctx.fillStyle = '#FFF';\n    ctx.textAlign = \"center\";\n    ctx.fillText(\"Hello World!\", canvasWidth/2, canvasHeight-20);\n  }\n\n  useEffect(()=> {\n    if(data) {\n      draw()\n    }\n  },[data])\n\n  if (!data) return null\n  return (\n    <div className=\"editor\">\n      <canvas\n        ref={canvasRef}\n        width={canvasWidth}\n        height={canvasHeight}\n        style={{width: '100%', height: '100%'}}\n      >\n      </canvas>\n    </div>\n  );\n}\n\nexport default Editor;\n","import React, { useState } from 'react';\n\nimport Thumb from './thumb'\nimport Editor from './editor'\n\nconst ENDPOINT = 'https://api.unsplash.com/search/photos?page=1&query='\nconst nothingToSeeHere = 'Client-ID Cccme_EruAfcmSox6ljTI3SdiYavskzRJnEqfO8splI'\n\nconst PhotoCanvas = () => {\n  const [query, setQuery] = useState('')\n  const [thumbs, setThumbs] = useState([])\n  const [selected, setSelected] = useState('')\n\n  const handleChange = (e) => {\n    setQuery(e.target.value)\n  }\n\n  const getPhotos = () => {\n    fetch(ENDPOINT + query, {\n      method: 'GET',\n      headers: {\n        'Authorization': nothingToSeeHere,\n      }\n    })\n    .then(res => res.json())\n    .then(data => {\n      setThumbs(data.results.slice(0,5))\n    })\n  }\n\n  const setSelectedPhoto = (data) => {\n    setSelected(data)\n  }\n\n  return (\n    <div className=\"photo-canvas\">\n      <label htmlFor=\"search\">Search</label>\n      <input type=\"text\" name=\"search\" onChange={handleChange} value={query} placeholder=\"Enter keyword\"/>\n      <button onClick={getPhotos}>Search</button>\n\n      <div className=\"thumbs\">\n        {thumbs.map((t,i) => (\n          <Thumb\n            key={i}\n            data={t}\n            setSelectedPhoto={setSelectedPhoto}\n            isSelected={selected.id === t.id ? true : null}\n          />\n        ))}\n      </div>\n\n      <Editor data={selected} />\n\n    </div>\n  );\n}\n\n\nexport default PhotoCanvas;\n","import React from 'react';\nimport './styles/index.scss';\n\nimport PhotoCanvas from './components/photoCanvas'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <PhotoCanvas />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}